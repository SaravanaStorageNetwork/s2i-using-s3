#!/bin/bash -e
#
# S2I assemble script for the 'nginx-centos7' image.
# The 'assemble' script builds your application source so that it is ready to run.
#
# For more information refer to the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#

source /usr/libexec/s2i/s3_access

if [[ "$1" == "-h" ]]; then
	# If the 'nginx-centos7' assemble script is executed with '-h' flag,
	# print the usage.
	exec /usr/libexec/s2i/usage
fi

# Restore artifacts from the previous build (if they exist).
# We set them here just for show, but you will need to set this up with your logic
# according to the application directory that you chose.

#uncommented by saran 26 may 2017
# if [ "$(ls /tmp/artifacts/ 2>/dev/null)" ]; then
  #   echo "---> Restoring build artifacts..."
  #  mv /tmp/artifacts/*  /usr/share/nginx/html/
# fi

result=$(s3curl.pl  --id 'tv1' --key 'test'   -- -k -v -s http://$ip_address:8080/artifacts/   | grep Key -w)

# artifacts present
if [[ -n "$result" ]]; then
    #TODO get all the objects from artifacts bucket and restore
    s3curl.pl  --id 'tv1' --key 'test'   -- -o /tmp/artifact.blob http://$ip_address:8080/artifacts/artifact.blob
    mv /tmp/artifact.blob /usr/share/nginx/html/
else
    echo "no artifact found"
fi

# Override the default nginx index.html file.
# This is what we consider in this example 'installing the application'
# here you can go ahead an replace this with the actual building of python modules,
# bundle install, and anything else you need.

echo "---> Building and installing application from source..."
mv /tmp/src/* /usr/share/nginx/html/
